<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 3.0.2 (doctrine2-annotation) on 2016-05-02 04:02:02.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace NoInc\SimpleStorefrontBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * NoInc\SimpleStorefrontBundle\Entity\Order
 *
 * @ORM\Entity(repositoryClass="NoInc\SimpleStorefrontBundle\Repository\OrderRepository")
 * @ORM\Table(name="orders")
 */
class Order
{
    /**
     * ID of the Order
     *
     * @ORM\Id
     * @ORM\Column(type="integer", nullable=false)
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * Email of the person who purchased
     *
     * @ORM\Column(type="string", length=45, nullable=false)
     */
    protected $email;

    /**
     * Amount of the Order
     *
     * @ORM\Column(type="float", nullable=false)
     */
    protected $amount;

    /**
     * ID of the Cart associated with the Order
     *
     * @ORM\Column(type="integer", nullable=false)
     */
    protected $cart_id;


    /**
     * Time this order was created
     *
     * @ORM\Column(type="integer", nullable=false)
     */
    protected $created_at;

    /**
     * @ORM\OneToOne(targetEntity="Cart", mappedBy="order")
     * @ORM\JoinColumn(name="cart_id", referencedColumnName="id", nullable=false)
     */
    protected $cart;

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of email.
     *
     * @param string $email
     * @return \NoInc\SimpleStorefrontBundle\Entity\Order
     */
    public function setEmail($email)
    {
        $this->email = $email;

        return $this;
    }

    /**
     * Get the value of email.
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Set the value of amount.
     *
     * @param float $amount
     * @return \NoInc\SimpleStorefrontBundle\Entity\Order
     */
    public function setAmount($amount)
    {
        $this->amount = $amount;

        return $this;
    }

    /**
     * Get the value of amount.
     *
     * @return float
     */
    public function getAmount()
    {
        return $this->amount;
    }

    /**
     * Set the value of created_at.
     *
     * @param integer $created_at
     * @return \NoInc\SimpleStorefrontBundle\Entity\Order
     */
    public function setCreatedAt($created_at)
    {
        $this->created_at = $created_at;

        return $this;
    }

    /**
     * Set the value of cart_id.
     *
     * @param integer $cart_id
     * @return \NoInc\SimpleStorefrontBundle\Entity\Order
     */
    public function setCartId($cart_id)
    {
        $this->cart_id = $cart_id;

        return $this;
    }

    /**
     * Get the value of cart_id.
     *
     * @return integer
     */
    public function getCartId()
    {
        return $this->cart_id;
    }

    /**
     * Set Cart entity (many to one).
     *
     * @param \NoInc\SimpleStorefrontBundle\Entity\Cart $cart
     * @return \NoInc\SimpleStorefrontBundle\Entity\Order
     */
    public function setCart(Cart $cart = null)
    {
        $this->cart = $cart;

        return $this;
    }

    /**
     * Get Cart entity (many to one).
     *
     * @return \NoInc\SimpleStorefrontBundle\Entity\Cart
     */
    public function getCart()
    {
        return $this->cart;
    }

    /**
     * Get the value of amount.
     *
     * @return float
     */
    public function getCreatedAt()
    {
        return $this->created_at;
    }

    public function __sleep()
    {
        return array('id', 'email', 'amount', 'cart_id', 'created_at');
    }
}

